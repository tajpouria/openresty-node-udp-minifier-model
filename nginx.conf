# This is a NGINX development configuration, Using in production environment is discourged
worker_processes  auto;
daemon            off;
error_log         /dev/stdout warn;

events {
  worker_connections  1024;
}

http {
  default_type  text/html;
  access_log    off;

  # gzip configuration
  gzip on;
  gzip_comp_level 3;
  gzip_types text/css text/javascript;

  server {
    listen  443 ssl http2;

    # Lua-NGIX-module configuration
    # Append src to lua search srouce
    lua_code_cache  off;
    lua_package_path  '${prefix}src/?.lua;;';

    ## SSL configuration
    # Disable SSL
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    # SSl ceritificates 
    ssl_certificate  ssl/self.crt;
    ssl_certificate_key  ssl/self.key;
    # Optimise cipher suites
    ssl_prefer_server_ciphers  on;
    # Setup which cipher suites should and which should not be used
    ssl_ciphers  ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    # Enable Deffie Hellman(DH) key exchange param
    ssl_dhparam  /etc/nginx/ssl/dhparam.pem; # dhparam key should generated using command provided after this code snippet
    # Enable HSTS When a (complying) browser receives HSTS header it will not try to contact the server using HTTP for a specified period of time
    add_header  Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # max-age in second
    # Optimise SSL session cache
    ssl_session_cache  shared:SSL:40m; # Cache on memory:Name of the cache:size of the cache
    ssl_session_timeout  4h;
    # Enable session tickets
    ssl_session_tickets  on;


    # Content cache configuration
    # Set conent cache
    proxy_cache_path  cache keys_zone=STATIC:10m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_key  $proxy_host$request_uri;
    proxy_ssl_server_name  on;

    include  src/nginx.conf;
  }

  # Redirect all trafic to HTTPS
  server {
    listen  80;
    server_name  172.17.0.2;
    return 301  https://$host$request_uri;

  }
}

